---
status: "published"
title: 'Common commands you need to know for the Next.js Supabase Turbo Starter Kit'
label: 'Common Commands'
order: 5
description: 'Learn about the common commands you need to know to work with the Next.js Supabase Turbo Starter Kit.'
---

Here are some common commands you'll need to know when working with the Next.js Supabase Turbo Starter Kit.

**Note:** You don't need these commands to kickstart your project, but it's useful to know they exist for when you need them.

{% sequence title="Commands" description="Learn about the common commands you need to know to work with the Next.js Supabase Turbo Starter Kit." %}
[Install the dependencies](#installing-dependencies)

[Start the development server](#starting-the-development-server)

[Run Supabase CLI commands](#running-supabase-cli-commands)

[Start Supabase](#starting-supabase)

[Start Stripe (optional for billing system testing)](#starting-stripe)

[Diffing Supabase Shema](#diffing-supabase-shema)

[Reset Supabase](#resetting-supabase)

[Generate Supabase Types](#generating-supabase-types)

[Run Tests](#running-tests)

[Clean the project](#cleaning-the-project)

[Type-check the project](#type-checking-the-project)

[Lint the project](#linting-the-project)

[Format the project](#formatting-the-project)

{% /sequence %}

## Installing Dependencies

To install the dependencies, run the following command:

```bash
pnpm i
```

This command will install all the necessary dependencies for the project.

## Starting the Development Server

Start the development server for the web application with:

```bash
pnpm run dev
```

## Running Supabase CLI Commands

Supabase is installed in the `apps/web` folder. To run commands with the Supabase CLI, use:

```bash
pnpm run --filter web supabase <command>
```

For example, if Supabase documentation recommends a command like:

```bash
supabase db link
```

You would run:

```bash
pnpm run --filter web supabase db link
```

## Starting Supabase

To start Supabase, run:

```bash
pnpm run supabase:web:start
```

This command starts the Supabase web server.

## Starting Stripe

To test the billing system, start Stripe with:

```bash
pnpm run stripe:listen
```

This routes webhooks to your local machine.

## Diffing Supabase Shema

After creating a schema, you can diff it against the existing schema to create a new migration with:

```bash
pnpm --filter web supabase:db:diff
```

To generate a new migration from the diff, run:

```bash
pnpm --filter web supabase:db:diff -f <migration-name>
```

Please use a meaningful migration name, such as `add-user-table`.

## Resetting Supabase

To reset the Supabase database, which is necessary when you update the schema or need a fresh start, run:

```bash
pnpm run supabase:web:reset
```

## Generate Supabase Types

When you update the Supabase schema, generate the latest types for the client by running:

```bash
pnpm run supabase:web:typegen
```

This should be done every time the Supabase schema is updated.

## Running Tests

To run the tests for the project, use:

```bash
pnpm run test
```

## Cleaning the Project

To clean the project, run:

```bash
pnpm run clean:workspaces
pnpm run clean
```

Then, reinstall the dependencies:

```bash
pnpm i
```

## Type-Checking the Project

To type-check the project, use:

```bash
pnpm run typecheck
```

## Linting the Project

To lint the project using ESLint, run:

```bash
pnpm run lint:fix
```

## Formatting the Project

To format the project using Prettier, run:

```bash
pnpm run format:fix
```

These commands will help you manage and maintain your project efficiently.