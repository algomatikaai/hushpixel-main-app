---
title: "Setting Monitoring in Makerkit | Next.js SaaS Boilerplate"
status: "published"
label: "How Monitoring works"
position: 0
description: "Introducing how Makerkit handles monitoring of performance metrics and exceptions in the Next.js Supabase SaaS kit"
---

{% sequence title="Steps to configure monitoring" description="Learn how to configure monitoring in the Next.js Supabase Starter Kit." %}

[Monitoring Providers](#monitoring-providers)

[Configuring Monitoring in Makerkit](#configuring-monitoring-in-makerkit)

[Performance Monitoring](#performance-monitoring)

{% /sequence %}

## Monitoring Providers
Makerkit provides first-class support for two monitoring providers:

1. [Baselime](https://baselime.io) (now part of Cloudflare)
2. [Sentry](https://sentry.io)

Our plugin system can allow you to add support for other providers in the future. For example, [here we added support for Telegram](/blog/tutorials/telegram-saas-error-monitoring).

### Configuring Monitoring in Makerkit

To set up monitoring in your application, you need to define the two variables below:

```bash
# sentry or baselime
NEXT_PUBLIC_MONITORING_PROVIDER=

# performance monitoring (only required for Baselime)
ENABLE_MONITORING_INSTRUMENTATION=true
INSTRUMENTATION_SERVICE_NAME=your_service_name
```

1. **Monitoring Provider** - the monitoring provider to use. Based on this variable, Makerkit will provide the relative implementation.
2. **Enable Instrumentation** - if enabled, we report performance metrics to the provider using Next.js

For the provider's specific settings, please check the relative documentation.

## Performance Monitoring

Makerkit will set up a few things for you out of the box:

1. **Performance Metrics** - Instrumentation using Next.js's instrumentation hook
2. **Client exceptions** - Automatically capturing uncaught exceptions on the client
3. **Server exceptions** - Automatically capturing server-side exceptions captured by the [Next.js instrumentation hook](https://nextjs.org/docs/app/api-reference/file-conventions/instrumentation#onrequesterror-optional)

Additionally, it provides you with the tools to manually capturing exceptions, should you want to.